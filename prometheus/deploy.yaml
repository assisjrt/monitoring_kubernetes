apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      restartPolicy: Always
      containers:
        - name: prometheus
          image: prom/prometheus:v2.24.1
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 9090
          readinessProbe:
            initialDelaySeconds: 5
            successThreshold: 1
            periodSeconds: 5
            httpGet:
              path: /status
              port: 9090
          livenessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            httpGet:
              path: /status
              port: 9090
          resources:
            requests:
              cpu: "250m"
              memory: "250Mi"
            limits:
              cpu: "500m"
              memory: "1000Mi"
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-config
              mountPath: /etc/prometheus/alert.rules
              subPath: alert.rules
            - name: prometheus-storage-volume
              mountPath: /prometheus/
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
            items:
              - key: prometheus.yml
                path: prometheus.yml
              - key: alert.rules
                path: alert.rules
        - name: prometheus-storage-volume
          emptyDir: {}
